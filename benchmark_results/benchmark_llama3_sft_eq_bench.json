{
  "results": {
    "eq_bench": {
      "eqbench,none": 7.601227578699403,
      "eqbench_stderr,none": 2.7473454347060136,
      "percent_parseable,none": 99.41520467836257,
      "percent_parseable_stderr,none": 0.584795321637428,
      "alias": "eq_bench"
    }
  },
  "group_subtasks": {
    "eq_bench": []
  },
  "configs": {
    "eq_bench": {
      "task": "eq_bench",
      "dataset_path": "pbevan11/EQ-Bench",
      "validation_split": "validation",
      "doc_to_text": "prompt",
      "doc_to_target": "reference_answer_fullscale",
      "process_results": "def calculate_score_fullscale(docs, results):\n    reference = eval(docs[\"reference_answer_fullscale\"])\n    user = dict(re.findall(r\"(\\w+):\\s+(\\d+)\", results[0]))\n    # First check that the emotions specified in the answer match those in the reference\n    if len(user.items()) != 4:\n        # print('! Error: 4 emotions were not returned')\n        # print(user)\n        return {\"eqbench\": 0, \"percent_parseable\": 0}\n    emotions_dict = {}\n    for emotion, user_emotion_score in user.items():\n        for i in range(1, 5):\n            if emotion == reference[f\"emotion{i}\"]:\n                emotions_dict[emotion] = True\n    if len(emotions_dict) != 4:\n        print(\"! Error: emotions did not match reference\")\n        print(user)\n        return {\"eqbench\": 0, \"percent_parseable\": 0}\n\n    difference_tally = (\n        0  # Tally of differerence from reference answers for this question\n    )\n\n    # Iterate over each emotion in the user's answers.\n    for emotion, user_emotion_score in user.items():\n        # If this emotion is in the reference, calculate the difference between the user's score and the reference score.\n        for i in range(1, 5):\n            if emotion == reference[f\"emotion{i}\"]:\n                d = abs(\n                    float(user_emotion_score) - float(reference[f\"emotion{i}_score\"])\n                )\n                # this will be a value between 0 and 10\n                if d == 0:\n                    scaled_difference = 0\n                elif d <= 5:\n                    # S-shaped scaling function\n                    # https://www.desmos.com/calculator\n                    # 6.5\\cdot\\ \\frac{1}{\\left(1\\ +\\ e^{\\left(-1.2\\cdot\\left(x-4\\right)\\right)}\\right)}\n                    scaled_difference = 6.5 * (1 / (1 + math.e ** (-1.2 * (d - 4))))\n\n                else:\n                    scaled_difference = d\n                difference_tally += scaled_difference\n\n    # Inverting the difference tally so that the closer the answer is to reference, the higher the score.\n    # The adjustment constant is chosen such that answering randomly produces a score of zero.\n    adjust_const = 0.7477\n    final_score = 10 - (difference_tally * adjust_const)\n    final_score_percent = final_score * 10\n\n    return {\"eqbench\": final_score_percent, \"percent_parseable\": 100}\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "eqbench",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "percent_parseable",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 80,
        "until": [
          "\n\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 2.1
      }
    }
  },
  "versions": {
    "eq_bench": 2.1
  },
  "n-shot": {
    "eq_bench": 0
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=/mnt/artifacts/llama3_sft/merged/OrpoLlama-3-8B,dtype=auto,trust_remote_code=True,load_in_8bit=True",
    "batch_size": "auto",
    "batch_sizes": [],
    "device": "cuda:0",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "2051338",
  "date": 1714616356.150509,
  "pretty_env_info": "PyTorch version: 2.1.0a0+32f93b1\nIs debug build: False\nCUDA used to build PyTorch: 12.2\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.3 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: version 3.27.6\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-6.5.0-1016-aws-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.2.140\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA A10G\nNvidia driver version: 535.161.07\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.9.5\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.9.5\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.9.5\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.9.5\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.9.5\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.9.5\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.9.5\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                       x86_64\nCPU op-mode(s):                     32-bit, 64-bit\nAddress sizes:                      48 bits physical, 48 bits virtual\nByte Order:                         Little Endian\nCPU(s):                             8\nOn-line CPU(s) list:                0-7\nVendor ID:                          AuthenticAMD\nModel name:                         AMD EPYC 7R32\nCPU family:                         23\nModel:                              49\nThread(s) per core:                 2\nCore(s) per socket:                 4\nSocket(s):                          1\nStepping:                           0\nBogoMIPS:                           5599.99\nFlags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy cr8_legacy abm sse4a misalignsse 3dnowprefetch topoext ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 clzero xsaveerptr rdpru wbnoinvd arat npt nrip_save rdpid\nHypervisor vendor:                  KVM\nVirtualization type:                full\nL1d cache:                          128 KiB (4 instances)\nL1i cache:                          128 KiB (4 instances)\nL2 cache:                           2 MiB (4 instances)\nL3 cache:                           16 MiB (1 instance)\nNUMA node(s):                       1\nNUMA node0 CPU(s):                  0-7\nVulnerability Gather data sampling: Not affected\nVulnerability Itlb multihit:        Not affected\nVulnerability L1tf:                 Not affected\nVulnerability Mds:                  Not affected\nVulnerability Meltdown:             Not affected\nVulnerability Mmio stale data:      Not affected\nVulnerability Retbleed:             Mitigation; untrained return thunk; SMT enabled with STIBP protection\nVulnerability Spec rstack overflow: Vulnerable: Safe RET, no microcode\nVulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl\nVulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:           Mitigation; Retpolines, IBPB conditional, STIBP always-on, RSB filling, PBRSB-eIBRS Not affected\nVulnerability Srbds:                Not affected\nVulnerability Tsx async abort:      Not affected\n\nVersions of relevant libraries:\n[pip3] numpy==1.22.2\n[pip3] pytorch-quantization==2.1.2\n[pip3] torch==2.1.0a0+32f93b1\n[pip3] torch-tensorrt==0.0.0\n[pip3] torchdata==0.7.0a0\n[pip3] torchtext==0.16.0a0\n[pip3] torchvision==0.16.0a0\n[pip3] triton==2.1.0+e621604\n[conda] Could not collect",
  "transformers_version": "4.40.1",
  "upper_git_hash": null
}